<?php
// vim: set filetype=php expandtab tabstop=2 shiftwidth=2 autoindent smartindent:

/**
 * Resources:
 * - http://yetanotherprogrammingblog.com/content/drupal-7-external-authentication-sample-code
 */

require_once('RestAuth/restauth.php');

$_restauth_connection;


function get_restauth_connection() {
    global $_restauth_connection;
    if (is_null($_restauth_connection)) {
        $_restauth_connection = new RestAuthConnection(
            'http://[::1]:8000',
            'example.com',
            'nopass'
        );
    }
    return $_restauth_connection;
}
function get_restauth_user($username) {
  $restauth_conn = get_restauth_connection();
  return new RestAuthUser($conn, $username);
}


/**
 * Implement hook_help() to display a small help message if somebody clicks the "Help" link on the modules list.
 */
function restauth_help( $path, $arg ) {
  switch ( $path ) {
    case 'admin/help#extauth': {
      return( '<p>' . t('RestAuth authentication.') . '</p>' );
    }
  }
}

/**
 * Implement hook_form_alter() to change the behaviour of the login form.
 *
 * Login validators are set in the user_login_default_validators() function in user.module.
 * They are normally set to array('user_login_name_validate',
 * 'user_login_authenticate_validate', 'user_login_final_validate').
 * We simply replace 'user_login_authenticate_validate' with 'extauth_login_validate'.
 */
function restauth_form_user_login_alter(&$form, $form_state) {
  $form['#validate'] = array('user_login_name_validate', 'restauth_login_validate', 'user_login_final_validate');
}
function restauth_form_user_login_block_alter(&$form, $form_state) {
  $form['#validate'] = array('user_login_name_validate', 'restauth_login_validate', 'user_login_final_validate');
}

function restauth_login_validate($form, &$form_state) {
  global $user;
  $username = $form_state['values']['name'];
  $restauth_conn = get_restauth_connection();
  $restauth_user = new RestAuthUser($restauth_conn, $username);

  if ($restauth_user->verifyPassword($form_state['values']['pass'])) {
    user_external_login_register($username, 'restauth');
    $form_state['uid'] = $user->uid;
  } else {
    die('wrong password!');
  }
}

/**
 * User registration form. user-register-form
 */
function restauth_form_user_register_form_alter(&$form, $form_state) {
  $form['#validate'][] = 'restauth_validate_new_user';
  $form['#submit'] = array('restauth_user_register_submit');
}

function restauth_validate_new_user($form, &$form_state) {
  $restauth_conn = get_restauth_connection();
  $username = $form_state['values']['name'];
  $email = $form_state['values']['mail'];
  try {
    RestAuthUser::createtest($restauth_conn, $username, null, array('email' => $email));
  }
  catch (RestAuthUserExists $e) {
    form_set_error('name', t("User already exists."));
  }
  catch (RestAuthException $e) {
    form_set_error('name', t("Error communicating with the authentication server. Please try again later."));
  }
}
/**
 * Overrides user_register_submit().
 */
function restauth_user_register_submit() {
}
