<?php
// vim: set filetype=php expandtab tabstop=2 shiftwidth=2 autoindent smartindent:

/**
 * Resources:
 * - http://yetanotherprogrammingblog.com/content/drupal-7-external-authentication-sample-code
 */

require_once('RestAuth/restauth.php');

$_restauth_connection;


function get_restauth_connection() {
    global $_restauth_connection;
    if (is_null($_restauth_connection)) {
        $_restauth_connection = new RestAuthConnection(
            'http://[::1]:8000',
            'example.com',
            'nopass'
        );
    }
    return $_restauth_connection;
}
function get_restauth_user($username) {
  $restauth_conn = get_restauth_connection();
  return new RestAuthUser($restauth_conn, $username);
}
function general_exception_msg() {
  return t("An error occured at our authentication server. Please try again later.");
}


/**
 * Implement hook_help() to display a small help message if somebody clicks the "Help" link on the modules list.
 */
function restauth_help( $path, $arg ) {
  switch ( $path ) {
    case 'admin/help#extauth': {
      return( '<p>' . t('RestAuth authentication.') . '</p>' );
    }
  }
}

/**
 * Implement hook_form_alter() to change the behaviour of the login form.
 *
 * Login validators are set in the user_login_default_validators() function in user.module.
 * They are normally set to array('user_login_name_validate',
 * 'user_login_authenticate_validate', 'user_login_final_validate').
 * We simply replace 'user_login_authenticate_validate' with 'extauth_login_validate'.
 */
function restauth_form_user_login_alter(&$form, $form_state) {
  $form['#validate'] = array('user_login_name_validate', 'restauth_login_validate', 'user_login_final_validate');
}
function restauth_form_user_login_block_alter(&$form, $form_state) {
  $form['#validate'] = array('user_login_name_validate', 'restauth_login_validate', 'user_login_final_validate');
}
/**
 * TODO: Get user by name like here:
 *   https://api.drupal.org/api/drupal/modules!user!user.module/function/user_authenticate/7
 *
 * @todo: We currently get two error messages when the user already exists on
 *        both sites.
 */
function restauth_login_validate($form, &$form_state) {
  // @todo: We still need to fetch the password, status and roles.
  global $user;
  $username = $form_state['values']['name'];
  $restauth_user = get_restauth_user($username);

  if ($restauth_user->verifyPassword($form_state['values']['pass'])) {
    user_external_login_register($username, 'restauth');
    $form_state['uid'] = $user->uid;
  } else {
    form_set_error('pass', t('Wrong username or password.'));
  }
}

/**
 * User registration form. user-register-form
 */
function restauth_form_user_register_form_alter(&$form, $form_state) {
  $form['#validate'][] = 'restauth_validate_new_user';
  $form['#submit'] = array('restauth_user_register_submit');
}

function restauth_validate_new_user($form, &$form_state) {
  // @todo: if form already has errors, skip restauth calls?
  $restauth_conn = get_restauth_connection();
  $username = $form_state['values']['name'];
  $email = $form_state['values']['mail'];
  try {
    RestAuthUser::createtest(
      $restauth_conn, $username, null, array('email' => $email));
  }
  catch (RestAuthUserExists $e) {
    form_set_error('name', t("User already exists."));
  }
  catch (RestAuthException $e) {
    form_set_error('name', general_exception_msg());
  }
}
/**
 * Overrides user_register_submit().
 */
function restauth_user_register_submit($form, &$form_state) {
  $restauth_conn = get_restauth_connection();
  $username = $form_state['values']['name'];
  $email = $form_state['values']['mail'];

  // NOTE: Any exception is very unlikely, since we just tested everything with
  // restauth_validate_new_user.
  try {
    $restauth_user = RestAuthUser::create(
      $restauth_conn, $username, null, array('email' => $email));
    user_register_submit($form, $form_state);
  }
  catch (RestAuthUserExists $e) {
    drupal_set_message(t("User already exists."), 'error');
  }
  catch (RestAuthException $e) {
    drupal_set_message(general_exception_msg(), 'error');
  }
}

function restauth_form_user_profile_form_alter(&$form, $form_state) {
  // @todo: same form is used for editing a different user, so roles have to be
  //        taken into account.
  $form['#submit'] = array('restauth_user_profile_form_submit');
}

function restauth_user_profile_form_submit($form, &$form_state) {
  // @todo: status (blocked/active) and roles are not yet taken into account.
  $username = $form_state['values']['name'];
  $password = $form_state['values']['pass'];
  $email = $form_state['values']['mail'];

  $restauth_user = get_restauth_user($username);

  // set email if it was changed:
  if ($email !== $form['#user']->mail) {
    $restauth_user->setProperty('email', $email);
  }

  // set password if it was set:
  if (! empty($password)) {
    $restauth_user->setPassword($password);
  }
}

